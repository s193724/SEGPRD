{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red179\green179\blue179;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c0\c84706;\cssrgb\c75294\c75294\c75294;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Step 1: Configure Nginx or Apache to require client certificates\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 For Nginx\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Install Nginx
\f1\b0  (if not already installed): On Debian/Ubuntu:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo apt update\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sudo apt install nginx\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Copy your Root CA and Intermediate CA certificates
\f1\b0  to a directory (e.g., 
\f2\fs26 /etc/ssl/certs/
\f1\fs24 ):\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo cp rootCA.crt /etc/ssl/certs/\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sudo cp intermediateCA.crt /etc/ssl/certs/\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edit your Nginx configuration
\f1\b0  to enable SSL and require client certificates: Open the configuration file for your site (usually located in 
\f2\fs26 /etc/nginx/sites-available/default
\f1\fs24  or 
\f2\fs26 /etc/nginx/nginx.conf
\f1\fs24 ):\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo nano /etc/nginx/sites-available/default\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs24 Modify it to include the SSL configuration and client certificate verification:\uc0\u8232 
\f2\fs26 nginx\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 server \{\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     listen 443 ssl;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     server_name example.com;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ssl_certificate /etc/ssl/certs/server.crt;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	13	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ssl_certificate_key /etc/ssl/private/server.key;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	14	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	15	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ssl_client_certificate /etc/ssl/certs/rootCA.crt;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	16	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ssl_verify_client on;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	17	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	18	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     location / \{\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	19	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         proxy_pass http://127.0.0.1:5000;  # For Flask app or PHP\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	20	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         proxy_set_header Host $host;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	21	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         proxy_set_header X-Real-IP $remote_addr;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	22	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	23	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         proxy_set_header X-Forwarded-Proto $scheme;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	24	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \}\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	25	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	26	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	27	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Restart Nginx
\f1\b0  to apply the changes:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo systemctl restart nginx.    brew services restart nginx\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 For Apache\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Install Apache
\f1\b0  (if not already installed): On Debian/Ubuntu:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo apt update\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sudo apt install apache2.  brew install apache2\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Copy the certificates to Apache\'92s directory
\f1\b0 :\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo cp rootCA.crt /etc/ssl/certs/\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sudo cp intermediateCA.crt /etc/ssl/certs/\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enable SSL and configure Apache
\f1\b0 : Edit the SSL configuration for your site (usually in 
\f2\fs26 /etc/apache2/sites-available/default-ssl.conf
\f1\fs24  or 
\f2\fs26 /etc/apache2/apache2.conf
\f1\fs24 ):\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo nano /etc/apache2/sites-available/default-ssl.conf\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs24 Add the following configurations to enable client certificate verification:\uc0\u8232 
\f2\fs26 apache\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 <VirtualHost _default_:443>\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf0     ServerAdmin webmaster@localhost\
    ServerName example.com\
    DocumentRoot /var/www/html\
\
    SSLEngine on\
    SSLCertificateFile /etc/ssl/certs/server.crt\
    SSLCertificateKeyFile /etc/ssl/private/server.key\
    SSLCACertificateFile /etc/ssl/certs/rootCA.crt\
    SSLVerifyClient require\
    SSLVerifyDepth 1\
\
    <Location />\
        ProxyPass http://127.0.0.1:5000  # Flask app or other backend\
        ProxyPassReverse http://127.0.0.1:5000\
    </Location>\
</VirtualHost>\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \uc0\u8232 
\f1\fs24 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls4\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SSLCACertificateFile
\f1\fs24 : Specifies the root CA certificate.\
\ls4\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SSLVerifyClient require
\f1\fs24 : Forces client certificate verification.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	26	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enable the SSL module and site
\f1\b0 :\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo a2enmod ssl\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	27	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sudo a2ensite default-ssl.conf\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	28	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	29	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Restart Apache
\f1\b0  to apply the changes:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo systemctl restart apache2\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	30	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Step 2: Deploy the Python Flask App or PHP App behind the reverse proxy\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 For Python Flask App\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Install Flask
\f1\b0  if it's not already installed:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 pip install flask\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a simple Flask app
\f1\b0  (e.g., 
\f2\fs26 app.py
\f1\fs24 ):\uc0\u8232 
\f2\fs26 python\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 from flask import Flask, request\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 app = Flask(__name__)\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 @app.route('/')\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 def index():\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     client_cert = request.headers.get('X-Client-Cert')\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     if client_cert:\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         return f"Client certificate: \{client_cert\}"\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     else:\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	13	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         return "No client certificate presented", 403\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	14	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	15	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if __name__ == '__main__':\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	16	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     app.run(host='0.0.0.0', port=5000)\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	17	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	18	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run the Flask app
\f1\b0 :\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 python app.py\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	19	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	20	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The app will now run on 
\f2\fs26 http://127.0.0.1:5000
\f1\fs24 , and the reverse proxy will forward requests from Nginx or Apache to this port.\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 For PHP App\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Install PHP
\f1\b0  (if it's not already installed): On Debian/Ubuntu:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo apt update\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sudo apt install php libapache2-mod-php\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a simple PHP file
\f1\b0  (e.g., 
\f2\fs26 index.php
\f1\fs24 ) in 
\f2\fs26 /var/www/html/
\f1\fs24 :\uc0\u8232 
\f2\fs26 php\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 <?php\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if ($_SERVER['SSL_CLIENT_CERT']) \{\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     echo "Client certificate: " . $_SERVER['SSL_CLIENT_CERT'];\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \} else \{\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     echo "No client certificate presented";\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ?>\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Restart Apache
\f1\b0 :\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 sudo systemctl restart apache2\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	13	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Now, the PHP app will be accessible, and the reverse proxy (Nginx or Apache) will forward client certificate information to the PHP app.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Step 3: Test the Setup\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test with a Client Certificate
\f1\b0 : When accessing the site, the client (browser or cURL) should provide a valid client certificate. You can use a tool like 
\f2\fs26 curl
\f1\fs24  to simulate this:\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 curl --cert user.crt --key user.key https://example.com\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Verify the Response
\f1\b0 : The server should either return a successful response or display information about the client certificate, depending on whether the certificate is valid.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Summary\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 You\'92ve now set up a system where:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Nginx or Apache acts as a reverse proxy.\
\ls8\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SSL/TLS client certificate authentication is required for accessing the app.\
\ls8\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A Flask or PHP app handles requests behind the reverse proxy.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 This setup is useful for scenarios where you need to authenticate users or services based on their client certificates, ensuring a high level of security for your application.\
\pard\tx720\tx1440\pardeftab720\partightenfactor0
\cf0 \strokec2 \
}